<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<svg width="100%" height="100%"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   version="1.1"
   onload="startUp()">

<script>

<![CDATA[

var xmlns="http://www.w3.org/2000/svg";
var xlinkns = "http://www.w3.org/1999/xlink"; 


var t = 0;

// wave parameters
var f = 1.0;
var lambda = 1.5;
var k;
var omega;

// string geometry
var ym = 0.7;
var xLength = 3.0;

// drawing variables
var Scale = 100.0;
var st;
var end;
var nPoints = 360; 
var nRatio = 6;
var nAmps = nPoints/nRatio;
var amps = new Array(nAmps);

// time interval
var Tinc=10;

function startUp() 
{	
	for(var i=0;i<nAmps;i++) {
		amps[i] = document.createElementNS(xmlns,"path");
		amps[i].setAttributeNS(null,"fill","none");
		amps[i].setAttributeNS(null,"stroke","red");
		amps[i].setAttributeNS(null,"stroke-width","1");
		document.getElementById("WaveGroup").appendChild(amps[i]);
	}
	
	st = document.getElementById("st");
	end = document.getElementById("end")	

	setParams();
	setInterval("motion()",Tinc)
}

function setParams()
{
	k = 2*Math.PI/lambda;
	omega = 2*Math.PI*f;
	//Tinc = 1/f*1000/10;
	t = 0.0;
	
}

function motion()
{
	var rwString = "";
	var lwString = "";
	var swString = "";
	var cString = "";
	var aString = "";
	iamps = 0;

	for (var i=0;i<nPoints;i++) {
		var X = i*xLength/(nPoints-1);
		var Y = 2*ym*Math.cos(omega*t)*Math.sin(k*X);
		var rY = ym*Math.sin(k*X-omega*t);
		var lY = ym*Math.sin(k*X+omega*t);

		var j = i % nRatio;

		if(j == 0) {
			//alert("nAmps="+nAmps+" i="+i);
			aString = "M"+X*Scale+",0"+ " L"+X*Scale+","+Y*Scale;
			amps[iamps++].setAttributeNS(null,"d",aString);	
		}
		
		if(i==0) {
			rwString ="M"+X*Scale+","+rY*Scale;
			lwString ="M"+X*Scale+","+lY*Scale;
			swString ="M"+X*Scale+","+Y*Scale;
			cString ="M"+X*Scale+","+Y*Scale;
			st.setAttributeNS(null,"cx",X*Scale);
			st.setAttributeNS(null,"cy",Y*Scale);
		}
		else if(i>0) {
			rwString += " L"+ Math.round(X*Scale)+","+Math.round(rY*Scale);
			lwString += " L"+ Math.round(X*Scale)+","+Math.round(lY*Scale);
			swString += " L"+ Math.round(X*Scale)+","+Math.round(Y*Scale);
			if(i==nPoints-1) {
			 	cString += " L"+ Math.round(X*Scale)+",0";
				end.setAttributeNS(null,"cx",X*Scale);
				end.setAttributeNS(null,"cy",Y*Scale);
			}
		}
	}
	 
	document.getElementById("rightWave").setAttributeNS(null,"d",rwString);	
	document.getElementById("leftWave").setAttributeNS(null,"d",lwString);	
	document.getElementById("standingWave").setAttributeNS(null,"d",swString);
	document.getElementById("centerLine").setAttributeNS(null,"d",cString);	

	//st.parentNode.removeChild(st); 
	document.getElementById("frequency").firstChild.nodeValue = "L=3m"+","+" frequency="+f.toFixed(1)+","+" lambda="+lambda.toFixed(1)+"m";
	document.getElementById("waveEquation").firstChild.nodeValue = "y(x,t)="+(2*ym).toFixed(1)+"*cos("+omega.toFixed(2)+"t)sin("+k.toFixed(1)+"x)";

	t += Tinc/1000;
}

function freqUp()
{
	if(f>=1.0) f++;
	else if(f<=0.9) f +=0.1;
	setParams();
}

function freqDown()
{
	if(f>1.0) f--;
	else if(f<=1.0) f -=0.1;
	if(f<0.1) f=0.1;
	setParams();
}

function lambdaUp()
{
	lambda += 0.5;
	setParams();
}

function lambdaDown()
{
	lambda -= 0.5;
	if(lambda<0.5) lambda = 0.5;
	setParams();
}

function mouseOverRed()
{
  document.getElementById("RedStop").setAttributeNS(null,"stop-color", "white"); 
}

function mouseOverGreen()
{
  document.getElementById("GreenStop").setAttributeNS(null,"stop-color", "white"); 
}

function mouseOutRed()
{
  document.getElementById("RedStop").setAttributeNS(null,"stop-color", "red"); 
}

function mouseOutGreen()
{
  document.getElementById("GreenStop").setAttributeNS(null,"stop-color", "green"); 
}

function mouseOverPurple()
{
  document.getElementById("PurpleStop").setAttributeNS(null,"stop-color", "white"); 
}

function mouseOverLime()
{
  document.getElementById("LimeStop").setAttributeNS(null,"stop-color", "white"); 
}

function mouseOutPurple()
{
  document.getElementById("PurpleStop").setAttributeNS(null,"stop-color", "purple"); 
}

function mouseOutLime()
{
  document.getElementById("LimeStop").setAttributeNS(null,"stop-color", "lime"); 
}

]]>

</script>


<text id="title" x="70" y="40" font-size="40"> 
	<tspan x="110" dy="0"> Standing Wave</tspan>
	<tspan x="80" font-size="24" dy="1.2em">Two opposite waves superposed</tspan>
 </text>

<g transform="translate(100,250)">
 <g id="WaveGroup">
  <path id="centerLine" stroke="black" stroke-width="1" fill="none"/>
  <g transform="translate(0,0)">
    <path id="rightWave" stroke="green" stroke-width="2" fill="none"/>
  </g>
  <g transform="translate(0,0)">
    <path id="leftWave" stroke="lime" stroke-width="2" fill="none"/>
  </g>
  <path id="standingWave" stroke="blue" stroke-width="2" fill="none"/>
  <circle id="st" r="1" stroke="red" stroke-width="2" fill="none"/>
  <circle id="end" r="1" stroke="red" stroke-width="2" fill="none"/>
 </g>
 <text id="frequency" x="-20" y="240" font-size="24" fill="blue">
 </text>
 <text id="waveEquation" x="-10" y="270" font-size="24" fill="black">
 </text>

<!-- buttons -->
<radialGradient id="RedG">
   <stop id="RedStop" stop-color="red" offset="0"/>
   <stop stop-color="white" offset="80%"/>
   <stop stop-color="red" offset="100%"/>
 </radialGradient>
<radialGradient id="GreenG">
   <stop id="GreenStop" stop-color="green" offset="0"/>
   <stop stop-color="white" offset="80%"/>
   <stop stop-color="green" offset="100%"/>
 </radialGradient>

<radialGradient id="PurpleG">
   <stop id="PurpleStop" stop-color="red" offset="0"/>
   <stop stop-color="white" offset="80%"/>
   <stop stop-color="purple" offset="100%"/>
 </radialGradient>
<radialGradient id="LimeG">
   <stop id="LimeStop" stop-color="green" offset="0"/>
   <stop stop-color="white" offset="80%"/>
   <stop stop-color="lime" offset="100%"/>
 </radialGradient>

<!--Freq-->
<g transform="translate(0,130)">
    <text id="freqLabel" x="-30" y="60" font-size="24" fill="black">
Freq:
    </text>
    <g id="freqUp" onclick="freqUp()" 
               onmouseover="mouseOverGreen()" 
               onmouseout="mouseOutGreen()" >

      <circle id="freqUpCircle" cx = "50" cy="50" r="20" fill="url(#GreenG)" />
      <path d="M 50 40 L 50 60 M 40 50 L 60 50" fill="none" stroke="black" stroke-width="3"/>
    </g>

    <g id="freqDown" onclick="freqDown()"
               onmouseover="mouseOverRed()" 
               onmouseout="mouseOutRed()">
      <circle id="freqDownCircle" cx = "100" cy="50" r="20" fill="url(#RedG)" />
      <path d="M 90 50 L 110 50" fill="none" stroke="black" stroke-width="3"/>
    </g>
 </g>

 <!-- lambda-->
 <g transform="translate(230,130)">
    <text id="lambdaLabel" x="-70" y="60" font-size="24" fill="black">
Lambda:
    </text>
    <g id="lambdaUp" onclick="lambdaUp()" 
               onmouseover="mouseOverLime()" 
               onmouseout="mouseOutLime()" >

      <circle id="lambdaUpCircle" cx = "50" cy="50" r="20" fill="url(#LimeG)" />
      <path d="M 50 40 L 50 60 M 40 50 L 60 50" fill="none" stroke="black" stroke-width="3"/>
    </g>

    <g id="lambdaDown" onclick="lambdaDown()"
               onmouseover="mouseOverPurple()" 
               onmouseout="mouseOutPurple()">
      <circle id="lambdaDownCircle" cx = "100" cy="50" r="20" fill="url(#PurpleG)" />
      <path d="M 90 50 L 110 50" fill="none" stroke="black" stroke-width="3"/>
    </g>
 </g>

</g>


</svg>
