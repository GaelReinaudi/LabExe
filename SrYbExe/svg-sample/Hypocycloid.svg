<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.0//EN" "http://www.w3.org/TR/SVG/DTD/svg10.dtd" >

<svg
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   version="1.1"
   width="100%"
   height="100%"
   xml:space="preserve"
   onresize="resize()"
   onload = "startup(evt)">

<script>

<![CDATA[

var xmlns="http://www.w3.org/2000/svg";
var xlinkns = "http://www.w3.org/1999/xlink"; 

var wWidth;
var wHeight;
var RPS = 1.0;
var baseTheta = 0.0;
var X = 0;
var Y = 0;
var RBase = 6;
var RWheel = 1;
var Routside = RWheel;
var Rmiddle = RWheel/2.0;
var dotSize = RWheel/10.0;
var Scale = 25;
var wheel;
var oDot;
var mDot;
var cDot;
var oCycloid;
var mCycloid;
var cCycloid;
var connector;

var T = 0.0;
var Counter = 0;
var Omega = RPS *2*Math.PI;
var baseOmega = Omega *RWheel/RBase;
var Tinc = 25;

var oPathString="";
var mPathString="";
var cPathString="";
var connectorPathString="";

var phi = 0;
var basePhi = 0;

var NPath=1000;

function startup(evt)
{
     	wWidth  = window.innerWidth;
	wHeight  = window.innerHeight;

	base = document.getElementById("Base");
	wheel = document.getElementById("Wheel");
	oDot = document.getElementById("OutsideDot");
	mDot = document.getElementById("MiddleDot");
	cDot = document.getElementById("CenterDot");

	oCycloid= document.getElementById("OutsideCycloid");
	mCycloid= document.getElementById("MiddleCycloid");
	cCycloid= document.getElementById("CenterCycloid");

	connector= document.getElementById("Connector");

	base.setAttributeNS(null,"r",RBase*Scale);


	calculateXY();

  	wheel.setAttributeNS(null,"cx",X*Scale);
	wheel.setAttributeNS(null,"cy",Y*Scale);
	wheel.setAttributeNS(null,"r",RWheel*Scale);

	var x = X+Routside*Math.cos((baseOmega-Omega)*T+phi);
	var y = Y+Routside*Math.sin((baseOmega-Omega)*T+phi);
  	oDot.setAttributeNS(null,"cx",x*Scale);
	oDot.setAttributeNS(null,"cy",y*Scale);
	oDot.setAttributeNS(null,"r",dotSize*Scale);
	oPathString ="M"+Math.round(x*Scale)+","+Math.round(y*Scale);
	oCycloid.setAttributeNS(null,"d",oPathString);


	connectorPathString =
	"M"+Math.round(X*Scale)+","+Math.round(Y*Scale)+" L"+ Math.round(x*Scale)+","+Math.round(y*Scale);

	connector.setAttributeNS(null,"d",connectorPathString);

	var x = X+Rmiddle*Math.cos((baseOmega-Omega)*T+phi);
	var y = Y+Rmiddle*Math.sin((baseOmega-Omega)*T+phi);
  	mDot.setAttributeNS(null,"cx",x*Scale);
	mDot.setAttributeNS(null,"cy",y*Scale);
	mDot.setAttributeNS(null,"r",dotSize*Scale);
	mPathString ="M"+Math.round(x*Scale)+","+Math.round(y*Scale);
	mCycloid.setAttributeNS(null,"d",mPathString);

	cPathString ="M"+Math.round(X*Scale)+","+Math.round(Y*Scale);
	cCycloid.setAttributeNS(null,"d",cPathString);

  	cDot.setAttributeNS(null,"cx",X*Scale);
	cDot.setAttributeNS(null,"cy",Y*Scale);
	cDot.setAttributeNS(null,"r",dotSize*Scale);

	setInterval("Animate()",Tinc);
}

function calculateXY()
{
	// calculate the center coordinates of the Wheel.
	T = Counter*Tinc/1000;
	X = (RBase-RWheel)*Math.cos(baseOmega*T+basePhi);
	Y  =(RBase-RWheel)*Math.sin(baseOmega*T+basePhi);
}

function Animate()
{
	Counter++;

	calculateXY();

	if( X*Scale > wWidth-2*RWheel*Scale-Scale) 
	{
		return;
	}

  	wheel.setAttributeNS(null,"cx",X*Scale);
	wheel.setAttributeNS(null,"cy",Y*Scale);

	var x = X+Routside*Math.cos((baseOmega-Omega)*T+phi);
	var y = Y+Routside*Math.sin((baseOmega-Omega)*T+phi);
  	oDot.setAttributeNS(null,"cx",x*Scale);
	oDot.setAttributeNS(null,"cy",y*Scale);
	if(Counter<=NPath) {
		oPathString +=" L"+Math.round(x*Scale)+","+Math.round(y*Scale);
		oCycloid.setAttributeNS(null,"d",oPathString);
	}

	connectorPathString ="M"+Math.round(X*Scale)+","+Math.round(Y*Scale)+
				" L"+ Math.round(x*Scale)+","+Math.round(y*Scale);
	connector.setAttributeNS(null,"d",connectorPathString);

	var x = X+Rmiddle*Math.cos((baseOmega-Omega)*T+phi);
	var y = Y+Rmiddle*Math.sin((baseOmega-Omega)*T+phi);
  	mDot.setAttributeNS(null,"cx",x*Scale);
	mDot.setAttributeNS(null,"cy",y*Scale);
	if(Counter<=NPath) {
		mPathString +=" L"+Math.round(x*Scale)+","+Math.round(y*Scale);
		mCycloid.setAttributeNS(null,"d",mPathString);
		cPathString +=" L"+Math.round(X*Scale)+","+Math.round(Y*Scale);
		cCycloid.setAttributeNS(null,"d",cPathString);
	}

  	cDot.setAttributeNS(null,"cx",X*Scale);
	cDot.setAttributeNS(null,"cy",Y*Scale);
}

function resize()
{
     	wWidth  = window.innerWidth;
	wHeight  = window.innerHeight;
}

]]>

</script> 

<g id="title">
  <text font-size="40" x="100" y="50">N-cusp Hypocycloid 
  </text>
</g>

<g id="MyCycloid" transform="translate(250,250)">

  <circle id="Base" cx="0" cy="0" stroke-width="1" stroke="blue" fill="none" opacity="1.0"/>
  <circle id="Wheel" stroke-width="2" stroke="black" fill="none"/>
  <circle id="OutsideDot" stroke-width="1" stroke="none" fill="red"/>
  <circle id="MiddleDot" stroke-width="1" stroke="none" fill="green" opacity="0.0"/>
  <circle id="CenterDot" stroke-width="1" stroke="none" fill="black"/> 
  <path id="OutsideCycloid" stroke-width="1" stroke="red" fill="none" />
  <path id="MiddleCycloid" stroke-width="1" stroke="green" fill="none" opacity="1.0"/>
  <path id="CenterCycloid" stroke-width="2" stroke="gray" fill="none" opacity="0.2"/>
  <path id="Connector" stroke-width="1" stroke="green" fill="none"/>
</g>

</svg>

